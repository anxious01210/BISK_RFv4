# Generated by Django 5.2.5 on 2025-08-22 10:08

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('attendance', '0002_recognitionsettings_max_periods_per_day'),
        ('cameras', '0005_alter_camera_pause_until'),
    ]

    operations = [
        migrations.AlterField(
            model_name='periodtemplate',
            name='early_grace_minutes',
            field=models.PositiveSmallIntegerField(default=0, help_text='Extend the start earlier by this many minutes when generating the daily window.'),
        ),
        migrations.AlterField(
            model_name='periodtemplate',
            name='end_time',
            field=models.TimeField(help_text='Local end time of the period (HH:MM).'),
        ),
        migrations.AlterField(
            model_name='periodtemplate',
            name='is_enabled',
            field=models.BooleanField(default=True, help_text='If off, this template is ignored when generating daily occurrences.'),
        ),
        migrations.AlterField(
            model_name='periodtemplate',
            name='late_grace_minutes',
            field=models.PositiveSmallIntegerField(default=0, help_text='Extend the end later by this many minutes when generating the daily window.'),
        ),
        migrations.AlterField(
            model_name='periodtemplate',
            name='name',
            field=models.CharField(help_text="Display name for this period (e.g., 'First Block').", max_length=64),
        ),
        migrations.AlterField(
            model_name='periodtemplate',
            name='order',
            field=models.PositiveSmallIntegerField(help_text='Sort order within the day. Lower numbers appear first.'),
        ),
        migrations.AlterField(
            model_name='periodtemplate',
            name='start_time',
            field=models.TimeField(help_text='Local start time of the period (HH:MM).'),
        ),
        migrations.AlterField(
            model_name='periodtemplate',
            name='weekdays_mask',
            field=models.PositiveSmallIntegerField(default=31, help_text='Bitmask of active weekdays. Add the values for the days you want:\nMon=1, Tue=2, Wed=4, Thu=8, Fri=16, Sat=32, Sun=64. ALL=127.\nExamples:\n• Mon–Fri: 31  (1+2+4+8+16)\n• Sat+Sun (western weekend): 96  (32+64)\n• Fri+Sat (Gulf weekend): 48  (16+32)\n• Sun–Thu (Fri & Sat OFF): 79  (64+1+2+4+8)\n• Only Sun: 64  • Only Fri: 16\nAt runtime we test: mask & (1 << date.weekday()).'),
        ),
        migrations.CreateModel(
            name='FaceEmbedding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dim', models.PositiveSmallIntegerField(default=512)),
                ('vector', models.BinaryField()),
                ('source_path', models.CharField(blank=True, max_length=512)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('camera', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cameras.camera')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='embeddings', to='attendance.student')),
            ],
            options={
                'indexes': [models.Index(fields=['student'], name='attendance__student_988459_idx'), models.Index(fields=['is_active', 'dim'], name='attendance__is_acti_72849d_idx'), models.Index(fields=['created_at'], name='attendance__created_12aa0a_idx')],
            },
        ),
    ]
