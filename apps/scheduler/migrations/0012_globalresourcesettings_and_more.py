# Generated by Django 5.2.5 on 2025-08-19 15:55

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cameras', '0005_alter_camera_pause_until'),
        ('scheduler', '0011_runnerheartbeat_pid'),
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalResourceSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu_nice', models.IntegerField(blank=True, help_text='e.g. 10 for background', null=True)),
                ('cpu_affinity', models.CharField(blank=True, help_text="CSV of CPU core indexes, e.g. '0,1,2'. Empty=all cores.", max_length=64, null=True)),
                ('cpu_quota_percent', models.PositiveSmallIntegerField(blank=True, help_text='Soft target used by runner throttling. 100 = no cap.', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('gpu_index', models.CharField(blank=True, help_text="Single or CSV for multi-GPU; e.g. '0' or '0,1'. Applied to CUDA_VISIBLE_DEVICES.", max_length=32, null=True)),
                ('gpu_memory_fraction', models.FloatField(blank=True, help_text='Torch-only per-process memory fraction (0.05â€“1.0).', null=True, validators=[django.core.validators.MinValueValidator(0.05), django.core.validators.MaxValueValidator(1.0)])),
                ('gpu_target_util_percent', models.PositiveSmallIntegerField(blank=True, help_text='Runner attempts to keep GPU util near this via FPS throttling.', null=True, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(100)])),
                ('max_fps_default', models.PositiveSmallIntegerField(blank=True, help_text="Default FPS cap if camera/profile doesn't specify.", null=True)),
                ('det_set_max', models.CharField(blank=True, help_text="Upper bound like '1600' to clamp detector size.", max_length=16, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='runnerheartbeat',
            name='snapshot_every',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='runnerheartbeat',
            name='target_fps',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='CameraResourceOverride',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu_nice', models.IntegerField(blank=True, null=True)),
                ('cpu_affinity', models.CharField(blank=True, max_length=64, null=True)),
                ('cpu_quota_percent', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('gpu_index', models.CharField(blank=True, max_length=32, null=True)),
                ('gpu_memory_fraction', models.FloatField(blank=True, null=True)),
                ('gpu_target_util_percent', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('max_fps', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('det_set_max', models.CharField(blank=True, max_length=16, null=True)),
                ('camera', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resource_override', to='cameras.camera')),
            ],
        ),
    ]
